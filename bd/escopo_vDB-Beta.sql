-- MySQL Script generated by MySQL Workbench
-- Sat Jan  5 07:35:09 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema educafro_Beta
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema educafro_Beta
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `educafro_Beta` DEFAULT CHARACTER SET utf8 ;
USE `educafro_Beta` ;

-- -----------------------------------------------------
-- Table `educafro_Beta`.`eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`eventos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_historico_acoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_historico_acoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `log_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `log_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_historico_acoes_user1_idx` (`user_id` ASC),
  INDEX `fk_user_historico_acoes_log1_idx` (`log_id` ASC),
  CONSTRAINT `fk_user_historico_acoes_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_historico_acoes_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `educafro_Beta`.`log` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`modificadores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`modificadores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `eventos_id` INT NOT NULL,
  `user_historico_acoes_id` INT NOT NULL,
  PRIMARY KEY (`id`, `eventos_id`, `user_historico_acoes_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_modificadores_eventos1_idx` (`eventos_id` ASC),
  INDEX `fk_modificadores_user_historico_acoes1_idx` (`user_historico_acoes_id` ASC),
  CONSTRAINT `fk_modificadores_eventos1`
    FOREIGN KEY (`eventos_id`)
    REFERENCES `educafro_Beta`.`eventos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_modificadores_user_historico_acoes1`
    FOREIGN KEY (`user_historico_acoes_id`)
    REFERENCES `educafro_Beta`.`user_historico_acoes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_cadastro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_cadastro` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabela é responsável por salvar o primeiro contato do usuario com o sistema e gerar informação suficiente para preencher todos os dados que seja obrigatório para iniciar uma conta.',
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `first_name` VARCHAR(60) NULL,
  `middle_name` VARCHAR(60) NULL,
  `last_name` VARCHAR(60) NULL,
  `rg` VARCHAR(60) NULL,
  `cpf` VARCHAR(60) NULL,
  `cep` VARCHAR(60) NULL,
  `numero_principal` VARCHAR(25) NULL,
  `numero_contato` VARCHAR(25) NULL,
  `info` MEDIUMTEXT NULL,
  `modificadores_id` INT NULL COMMENT 'Caso o inquilino seja criado por algum membro do sistema aqui sera registrado o evento',
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`, `modificadores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_cadastro_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_user_cadastro_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Tabela-Mãe onde será salvo todas as informações relacionadas com a individualidade do inquilino ',
  `user_cadastro_id` INT NOT NULL,
  `username` VARCHAR(256) NULL,
  `email` VARCHAR(256) NULL,
  `password` VARCHAR(256) NULL,
  `remember_token` VARCHAR(256) NULL,
  `google` VARCHAR(256) NULL,
  `oauth_provider` ENUM(" ", "Facebook", "Google", "Facebook e Google") NULL,
  `primeiro_nome` VARCHAR(64) NULL,
  `meio_nome` VARCHAR(64) NULL,
  `ultimo_nome` VARCHAR(64) NULL,
  `gender` VARCHAR(16) NULL,
  `locale` VARCHAR(256) NULL,
  `cover` VARCHAR(256) NULL,
  `photo` VARCHAR(256) NULL,
  `photo_dir` VARCHAR(256) NULL,
  `photo_size` INT NULL,
  `photo_type` VARCHAR(256) NULL,
  `link` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `user_cadastro_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_user_cadastro1_idx` (`user_cadastro_id` ASC),
  CONSTRAINT `fk_user_user_cadastro1`
    FOREIGN KEY (`user_cadastro_id`)
    REFERENCES `educafro_Beta`.`user_cadastro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`perfis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`perfis` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_perfis_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_perfis_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`categorizacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`categorizacao` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `eventos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `eventos_id`),
  UNIQUE INDEX `idcategorizacao_UNIQUE` (`id` ASC),
  INDEX `fk_categorizacao_eventos1_idx` (`eventos_id` ASC),
  CONSTRAINT `fk_categorizacao_eventos1`
    FOREIGN KEY (`eventos_id`)
    REFERENCES `educafro_Beta`.`eventos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`categorizacao_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`categorizacao_tags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `categorizacao_id` INT NOT NULL,
  `categorizacao_eventos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `categorizacao_id`, `categorizacao_eventos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_categorizacao_tags_categorizacao1_idx` (`categorizacao_id` ASC, `categorizacao_eventos_id` ASC),
  CONSTRAINT `fk_categorizacao_tags_categorizacao1`
    FOREIGN KEY (`categorizacao_id` , `categorizacao_eventos_id`)
    REFERENCES `educafro_Beta`.`categorizacao` (`id` , `eventos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`codigos_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`codigos_tags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `categorizacao_tags_id` INT NOT NULL,
  `abreviatura` VARCHAR(64) NULL,
  `data_limite` DATE NULL,
  PRIMARY KEY (`id`, `categorizacao_tags_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_codigos_tags_categorizacao_tags1_idx` (`categorizacao_tags_id` ASC),
  CONSTRAINT `fk_codigos_tags_categorizacao_tags1`
    FOREIGN KEY (`categorizacao_tags_id`)
    REFERENCES `educafro_Beta`.`categorizacao_tags` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`codigos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`codigos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigos_tags_id` INT NOT NULL,
  `codigo` VARCHAR(100) NULL,
  `ativacao` ENUM("Desativado", "Ativado", "Invalidado") NULL COMMENT 'Este código está :',
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`, `codigos_tags_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_codigos_codigos_tags1_idx` (`codigos_tags_id` ASC),
  CONSTRAINT `fk_codigos_codigos_tags1`
    FOREIGN KEY (`codigos_tags_id`)
    REFERENCES `educafro_Beta`.`codigos_tags` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`cursos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`cursos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'aqui sera salvo todos os cursos ofertados na educafro, momentaneamente sera Itafro, MedAfro e o Tecnoafro, caso o curso for segmentado, mantem o mesmo nome e altera o titulo expl: nome->Tecnoafro e titulo-> SEO ou nome->Tecnoafro e titulo-> Suporte técnico, Tabela cursos baseada na metodologia da USP -> https://uspdigital.usp.br/jupiterweb/listarGradeCurricular?codcg=27&codcur=27531&codhab=4&tipo=N&print=true',
  `logo` VARCHAR(256) NULL,
  `nome` VARCHAR(32) NULL,
  `titulo` VARCHAR(128) NULL,
  `img` VARCHAR(256) NULL,
  `descricao` TEXT NULL,
  `info` TEXT NULL,
  `nivel` ENUM("Outros", "Reforço", "Pré-vestibular", "Profissionalizante", "Pós-Graduação") NULL,
  `tipo` ENUM("Encerrado", "Em Breve", "Presencial", "Online", "Presencial e Online") NULL,
  `vagas` INT(4) NULL,
  `carga_horaria` VARCHAR(16) NULL,
  `prox_turma` DATE NULL,
  `objetivo` TEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  `modificadores_id` INT NOT NULL,
  PRIMARY KEY (`id`, `modificadores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_cursos_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_cursos_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`cursos_modulos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`cursos_modulos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cursos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cursos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_cursos_modulos_cursos1_idx` (`cursos_id` ASC),
  CONSTRAINT `fk_cursos_modulos_cursos1`
    FOREIGN KEY (`cursos_id`)
    REFERENCES `educafro_Beta`.`cursos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`disciplinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`disciplinas` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'método de disciplina baseado na USP, https://uspdigital.usp.br/jupiterweb/obterDisciplina?sgldis=4302111&codcur=43021&codhab=101',
  `cursos_modulos_id` INT NOT NULL,
  `cursos_modulos_cursos_id` INT NOT NULL,
  `nome` VARCHAR(64) NULL,
  `icon` VARCHAR(256) NULL,
  `descricao` TEXT NULL,
  `credito_aula` INT NULL,
  `credito_trabalho` INT NULL,
  `carga_horaria_total` INT NULL,
  `tipo` ENUM("Semanal", "Mensal", "Bimestral", "Trimestral", "Semestral", "Anual") NULL,
  `ativar` DATE NULL,
  `objetivos` TEXT NULL,
  `programa_resumido` VARCHAR(64) NULL,
  `programa` TEXT NULL,
  `avaliacao` SET("Método", "Critério", "Recuperação") NULL,
  `metodo` TEXT NULL,
  `criterio` TEXT NULL,
  `recuperacao` TEXT NULL,
  `bibliografia` TEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  `modificadores_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cursos_modulos_id`, `cursos_modulos_cursos_id`, `modificadores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_disciplinas_cursos_modulos1_idx` (`cursos_modulos_id` ASC, `cursos_modulos_cursos_id` ASC),
  INDEX `fk_disciplinas_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_disciplinas_cursos_modulos1`
    FOREIGN KEY (`cursos_modulos_id` , `cursos_modulos_cursos_id`)
    REFERENCES `educafro_Beta`.`cursos_modulos` (`id` , `cursos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disciplinas_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`temas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`temas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `disciplinas_id` INT NOT NULL,
  PRIMARY KEY (`id`, `disciplinas_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_temas_disciplinas1_idx` (`disciplinas_id` ASC),
  CONSTRAINT `fk_temas_disciplinas1`
    FOREIGN KEY (`disciplinas_id`)
    REFERENCES `educafro_Beta`.`disciplinas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`regras_niveis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`regras_niveis` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cargo` VARCHAR(32) NOT NULL,
  `hierarquia` INT NOT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  `modificadores_id` INT NULL,
  PRIMARY KEY (`id`, `modificadores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_regras_niveis_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_regras_niveis_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`regras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`regras` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `regras_niveis_id` INT NOT NULL,
  `status` VARCHAR(256) NULL,
  `descricao` TEXT NULL,
  `regra` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `regras_niveis_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_regras_regras_niveis1_idx` (`regras_niveis_id` ASC),
  CONSTRAINT `fk_regras_regras_niveis1`
    FOREIGN KEY (`regras_niveis_id`)
    REFERENCES `educafro_Beta`.`regras_niveis` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`cursos_secoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`cursos_secoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cursos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cursos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_cursos_secoes_cursos1_idx` (`cursos_id` ASC),
  CONSTRAINT `fk_cursos_secoes_cursos1`
    FOREIGN KEY (`cursos_id`)
    REFERENCES `educafro_Beta`.`cursos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`professores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`professores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  `cursos_secoes_id` INT NOT NULL,
  `tipo` ENUM("Online", "Presencial") NULL,
  PRIMARY KEY (`id`, `user_id`, `regras_id`, `cursos_secoes_id`),
  INDEX `fk_professores_user1_idx` (`user_id` ASC),
  INDEX `fk_professores_regras1_idx` (`regras_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_professores_cursos_secoes1_idx` (`cursos_secoes_id` ASC),
  CONSTRAINT `fk_professores_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professores_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professores_cursos_secoes1`
    FOREIGN KEY (`cursos_secoes_id`)
    REFERENCES `educafro_Beta`.`cursos_secoes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`subtemas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`subtemas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `temas_id` INT NOT NULL,
  `professores_id` INT NOT NULL,
  PRIMARY KEY (`id`, `temas_id`, `professores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_subtemas_temas1_idx` (`temas_id` ASC),
  INDEX `fk_subtemas_professores1_idx` (`professores_id` ASC),
  CONSTRAINT `fk_subtemas_temas1`
    FOREIGN KEY (`temas_id`)
    REFERENCES `educafro_Beta`.`temas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subtemas_professores1`
    FOREIGN KEY (`professores_id`)
    REFERENCES `educafro_Beta`.`professores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`aulas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`aulas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `subtemas_id` INT NOT NULL,
  PRIMARY KEY (`id`, `subtemas_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_aula_subtemas1_idx` (`subtemas_id` ASC),
  CONSTRAINT `fk_aula_subtemas1`
    FOREIGN KEY (`subtemas_id`)
    REFERENCES `educafro_Beta`.`subtemas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_historico_senha`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_historico_senha` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_historico_senha_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_historico_senha_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_preferencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_preferencias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_preferencias_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_preferencias_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_inscricoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_inscricoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `cursos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `cursos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_inscricoes_user1_idx` (`user_id` ASC),
  INDEX `fk_user_inscricoes_cursos1_idx` (`cursos_id` ASC),
  CONSTRAINT `fk_user_inscricoes_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_inscricoes_cursos1`
    FOREIGN KEY (`cursos_id`)
    REFERENCES `educafro_Beta`.`cursos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `user_infocol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_info_user_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_info_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`administradores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`administradores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `regras_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `regras_id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_administradores_regras1_idx` (`regras_id` ASC),
  INDEX `fk_administradores_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_administradores_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_administradores_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`administradores_tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`administradores_tokens` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabela é reponsável por armazenar a senha de permissão pública de cada usuário. Permitindo que ao usá-la em outra sessão o inquilino receba tal privilégio para executar a devida função.  ',
  `administradores_id` INT NOT NULL,
  `token` VARCHAR(255) NULL,
  `instancia` VARCHAR(255) NULL,
  `ip_restricao` VARCHAR(255) NULL,
  `info` MEDIUMTEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`, `administradores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_administradores_token_administradores1_idx` (`administradores_id` ASC),
  CONSTRAINT `fk_administradores_token_administradores1`
    FOREIGN KEY (`administradores_id`)
    REFERENCES `educafro_Beta`.`administradores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`perfis_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`perfis_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `perfis_id` INT NOT NULL,
  `perfis_user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `perfis_id`, `perfis_user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_perfis_info_perfis1_idx` (`perfis_id` ASC, `perfis_user_id` ASC),
  CONSTRAINT `fk_perfis_info_perfis1`
    FOREIGN KEY (`perfis_id` , `perfis_user_id`)
    REFERENCES `educafro_Beta`.`perfis` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`perfis_update`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`perfis_update` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `perfis_id` INT NOT NULL,
  `perfis_user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `perfis_id`, `perfis_user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_perfis_update_perfis1_idx` (`perfis_id` ASC, `perfis_user_id` ASC),
  CONSTRAINT `fk_perfis_update_perfis1`
    FOREIGN KEY (`perfis_id` , `perfis_user_id`)
    REFERENCES `educafro_Beta`.`perfis` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`regras_permitir_crud`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`regras_permitir_crud` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_historico_acoes_id` INT NOT NULL,
  `user_historico_acoes_user_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_historico_acoes_id`, `user_historico_acoes_user_id`, `regras_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_regras_permitir_crud_user_historico_acoes1_idx` (`user_historico_acoes_id` ASC, `user_historico_acoes_user_id` ASC),
  INDEX `fk_regras_permitir_crud_regras1_idx` (`regras_id` ASC),
  CONSTRAINT `fk_regras_permitir_crud_user_historico_acoes1`
    FOREIGN KEY (`user_historico_acoes_id` , `user_historico_acoes_user_id`)
    REFERENCES `educafro_Beta`.`user_historico_acoes` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_regras_permitir_crud_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cursos_id` INT NOT NULL,
  `categorizacao_id` INT NOT NULL,
  `regras_permitir_crud_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cursos_id`, `categorizacao_id`, `regras_permitir_crud_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_grupos_cursos1_idx` (`cursos_id` ASC),
  INDEX `fk_grupos_categorizacao1_idx` (`categorizacao_id` ASC),
  INDEX `fk_grupos_regras_permitir_crud1_idx` (`regras_permitir_crud_id` ASC),
  CONSTRAINT `fk_grupos_cursos1`
    FOREIGN KEY (`cursos_id`)
    REFERENCES `educafro_Beta`.`cursos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_categorizacao1`
    FOREIGN KEY (`categorizacao_id`)
    REFERENCES `educafro_Beta`.`categorizacao` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_regras_permitir_crud1`
    FOREIGN KEY (`regras_permitir_crud_id`)
    REFERENCES `educafro_Beta`.`regras_permitir_crud` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_membros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_membros` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grupos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `grupos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_grupos_membros_grupos1_idx` (`grupos_id` ASC),
  CONSTRAINT `fk_grupos_membros_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grupos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `grupos_id`),
  UNIQUE INDEX `idgrupos_info_UNIQUE` (`id` ASC),
  INDEX `fk_grupos_info_grupos1_idx` (`grupos_id` ASC),
  CONSTRAINT `fk_grupos_info_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`user_atribuicoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`user_atribuicoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `acao` ENUM("Atribuido", "Atribuir") NOT NULL COMMENT 'tipo de ação que esta sendo executada',
  `titulo` VARCHAR(128) NULL COMMENT 'titulo da atribuição ou do log',
  `eventos_id` INT NULL,
  `model` VARCHAR(64) NULL,
  `caminho` VARCHAR(128) NULL,
  `info` MEDIUMTEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_atribuicoes_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_atribuicoes_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`perfis_preferencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`perfis_preferencias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `perfis_id` INT NOT NULL,
  `perfis_user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `perfis_id`, `perfis_user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_perfis_preferencias_perfis1_idx` (`perfis_id` ASC, `perfis_user_id` ASC),
  CONSTRAINT `fk_perfis_preferencias_perfis1`
    FOREIGN KEY (`perfis_id` , `perfis_user_id`)
    REFERENCES `educafro_Beta`.`perfis` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`categorizacao_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`categorizacao_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `categorizacao_id` INT NOT NULL,
  `categorizacao_eventos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `categorizacao_id`, `categorizacao_eventos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_categorizacao_info_categorizacao1_idx` (`categorizacao_id` ASC, `categorizacao_eventos_id` ASC),
  CONSTRAINT `fk_categorizacao_info_categorizacao1`
    FOREIGN KEY (`categorizacao_id` , `categorizacao_eventos_id`)
    REFERENCES `educafro_Beta`.`categorizacao` (`id` , `eventos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`regras_historico_atribuicoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`regras_historico_atribuicoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_atribuicoes_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_atribuicoes_id`, `regras_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_regras_atribuir_permissoes_user_atribuicoes1_idx` (`user_atribuicoes_id` ASC),
  INDEX `fk_regras_atribuir_permissoes_regras1_idx` (`regras_id` ASC),
  CONSTRAINT `fk_regras_atribuir_permissoes_user_atribuicoes1`
    FOREIGN KEY (`user_atribuicoes_id`)
    REFERENCES `educafro_Beta`.`user_atribuicoes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_regras_atribuir_permissoes_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`codigos_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`codigos_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigos_id` INT NOT NULL,
  `modificadores_id` INT NOT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`, `codigos_id`, `modificadores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_codigos_info_codigos1_idx` (`codigos_id` ASC),
  INDEX `fk_codigos_info_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_codigos_info_codigos1`
    FOREIGN KEY (`codigos_id`)
    REFERENCES `educafro_Beta`.`codigos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_codigos_info_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`cursos_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`cursos_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cursos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cursos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_cursos_info_cursos1_idx` (`cursos_id` ASC),
  CONSTRAINT `fk_cursos_info_cursos1`
    FOREIGN KEY (`cursos_id`)
    REFERENCES `educafro_Beta`.`cursos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_secoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_secoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grupos_id` INT NOT NULL,
  PRIMARY KEY (`id`, `grupos_id`),
  UNIQUE INDEX `idgrupos_secoes_UNIQUE` (`id` ASC),
  INDEX `fk_grupos_secoes_grupos1_idx` (`grupos_id` ASC),
  CONSTRAINT `fk_grupos_secoes_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`cursos_historico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`cursos_historico` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cursos_secoes_id` INT NOT NULL,
  `cursos_secoes_cursos_id` INT NOT NULL,
  `log_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cursos_secoes_id`, `cursos_secoes_cursos_id`, `log_id`),
  UNIQUE INDEX `idcursos_historico_UNIQUE` (`id` ASC),
  INDEX `fk_cursos_historico_cursos_secoes1_idx` (`cursos_secoes_id` ASC, `cursos_secoes_cursos_id` ASC),
  INDEX `fk_cursos_historico_log1_idx` (`log_id` ASC),
  CONSTRAINT `fk_cursos_historico_cursos_secoes1`
    FOREIGN KEY (`cursos_secoes_id` , `cursos_secoes_cursos_id`)
    REFERENCES `educafro_Beta`.`cursos_secoes` (`id` , `cursos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cursos_historico_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `educafro_Beta`.`log` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_historico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_historico` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grupos_id` INT NOT NULL,
  `log_id` INT NOT NULL,
  PRIMARY KEY (`id`, `grupos_id`, `log_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_grupos_historico_grupos1_idx` (`grupos_id` ASC),
  INDEX `fk_grupos_historico_log1_idx` (`log_id` ASC),
  CONSTRAINT `fk_grupos_historico_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_historico_log1`
    FOREIGN KEY (`log_id`)
    REFERENCES `educafro_Beta`.`log` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`super_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`super_usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  `regras_regras_niveis_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `regras_id`, `regras_regras_niveis_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_super_usuarios_user1_idx` (`user_id` ASC),
  INDEX `fk_super_usuarios_regras1_idx` (`regras_id` ASC, `regras_regras_niveis_id` ASC),
  CONSTRAINT `fk_super_usuarios_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_super_usuarios_regras1`
    FOREIGN KEY (`regras_id` , `regras_regras_niveis_id`)
    REFERENCES `educafro_Beta`.`regras` (`id` , `regras_niveis_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`alunos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  `cursos_modulos_id` INT NOT NULL,
  `tipo` ENUM("Online", "Presencial") NULL,
  PRIMARY KEY (`id`, `user_id`, `regras_id`, `cursos_modulos_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_alunos_user1_idx` (`user_id` ASC),
  INDEX `fk_alunos_regras1_idx` (`regras_id` ASC),
  INDEX `fk_alunos_cursos_modulos1_idx` (`cursos_modulos_id` ASC),
  CONSTRAINT `fk_alunos_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alunos_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alunos_cursos_modulos1`
    FOREIGN KEY (`cursos_modulos_id`)
    REFERENCES `educafro_Beta`.`cursos_modulos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`voluntarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`voluntarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `regras_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_voluntarios_user1_idx` (`user_id` ASC),
  INDEX `fk_voluntarios_regras1_idx` (`regras_id` ASC),
  CONSTRAINT `fk_voluntarios_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_voluntarios_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`outros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`outros` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `regras_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `regras_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_outros_user1_idx` (`user_id` ASC),
  INDEX `fk_outros_regras1_idx` (`regras_id` ASC),
  CONSTRAINT `fk_outros_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `educafro_Beta`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_outros_regras1`
    FOREIGN KEY (`regras_id`)
    REFERENCES `educafro_Beta`.`regras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_administradores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_administradores` (
  `grupos_id` INT NOT NULL,
  `administradores_id` INT NOT NULL,
  `ativo` TINYINT(2) NULL,
  `nome` VARCHAR(64) NULL,
  `descricao` VARCHAR(256) NULL,
  `objetivo` TEXT NULL,
  `liderId` INT NULL COMMENT 'não contem tabela, porém sera salvo o id do usuario nomeado como lider.',
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  `modificadores_id` INT NOT NULL,
  PRIMARY KEY (`grupos_id`, `administradores_id`, `liderId`, `modificadores_id`),
  INDEX `fk_grupos_has_administradores_administradores1_idx` (`administradores_id` ASC),
  INDEX `fk_grupos_has_administradores_grupos1_idx` (`grupos_id` ASC),
  INDEX `fk_grupos_administradores_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_grupos_has_administradores_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_has_administradores_administradores1`
    FOREIGN KEY (`administradores_id`)
    REFERENCES `educafro_Beta`.`administradores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_administradores_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`administradores_acoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`administradores_acoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `administradores_id` INT NOT NULL,
  PRIMARY KEY (`id`, `administradores_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_administradores_acoes_administradores1_idx` (`administradores_id` ASC),
  CONSTRAINT `fk_administradores_acoes_administradores1`
    FOREIGN KEY (`administradores_id`)
    REFERENCES `educafro_Beta`.`administradores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`administradores_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`administradores_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`super_usuarios_token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`super_usuarios_token` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabela é reponsável por armazenar a senha de permissão pública de cada usuário. Permitindo que ao usá-la em outra sessão o inquilino receba tal privilégio para executar a devida função.  ',
  `token` VARCHAR(255) NULL,
  `instancia` VARCHAR(255) NULL,
  `ip_restricao` VARCHAR(255) NULL,
  `info` MEDIUMTEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  `super_usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id`, `super_usuarios_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_super_usuarios_token_super_usuarios1_idx` (`super_usuarios_id` ASC),
  CONSTRAINT `fk_super_usuarios_token_super_usuarios1`
    FOREIGN KEY (`super_usuarios_id`)
    REFERENCES `educafro_Beta`.`super_usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`super_usuarios_acoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`super_usuarios_acoes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `super_usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id`, `super_usuarios_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_administradores_acoes_copy1_super_usuarios1_idx` (`super_usuarios_id` ASC),
  CONSTRAINT `fk_administradores_acoes_copy1_super_usuarios1`
    FOREIGN KEY (`super_usuarios_id`)
    REFERENCES `educafro_Beta`.`super_usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`super_usuarios_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`super_usuarios_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_super_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_super_usuarios` (
  `grupos_id` INT NOT NULL,
  `super_usuarios_id` INT NOT NULL,
  `ativo` TINYINT(2) NULL,
  `nome` VARCHAR(64) NULL,
  `descricao` VARCHAR(256) NULL,
  `objetivo` TEXT NULL,
  `liderId` INT NULL COMMENT 'não contem tabela, porém sera salvo o id do usuario nomeado como lider.',
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  `modificadores_id` INT NOT NULL,
  PRIMARY KEY (`grupos_id`, `super_usuarios_id`, `modificadores_id`),
  INDEX `fk_grupos_has_super_usuarios_super_usuarios1_idx` (`super_usuarios_id` ASC),
  INDEX `fk_grupos_has_super_usuarios_grupos1_idx` (`grupos_id` ASC),
  INDEX `fk_grupos_super_usuarios_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_grupos_has_super_usuarios_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_has_super_usuarios_super_usuarios1`
    FOREIGN KEY (`super_usuarios_id`)
    REFERENCES `educafro_Beta`.`super_usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_super_usuarios_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `educafro_Beta`.`grupos_professores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `educafro_Beta`.`grupos_professores` (
  `grupos_id` INT NOT NULL,
  `professores_id` INT NOT NULL,
  `modificadores_id` INT NOT NULL,
  PRIMARY KEY (`grupos_id`, `professores_id`, `modificadores_id`),
  INDEX `fk_grupos_has_professores_professores1_idx` (`professores_id` ASC),
  INDEX `fk_grupos_has_professores_grupos1_idx` (`grupos_id` ASC),
  INDEX `fk_grupos_professores_modificadores1_idx` (`modificadores_id` ASC),
  CONSTRAINT `fk_grupos_has_professores_grupos1`
    FOREIGN KEY (`grupos_id`)
    REFERENCES `educafro_Beta`.`grupos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_has_professores_professores1`
    FOREIGN KEY (`professores_id`)
    REFERENCES `educafro_Beta`.`professores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_grupos_professores_modificadores1`
    FOREIGN KEY (`modificadores_id`)
    REFERENCES `educafro_Beta`.`modificadores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
